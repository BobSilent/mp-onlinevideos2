<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ovs="clr-namespace:OnlineVideos.MediaPortal2;assembly=OnlineVideos.MediaPortal2"
    DependsOnStyleResources="Buttons,Colors,Consts,OnlineVideosConsts,OtherControls">

    <ovs:SiteUtilIconConverter x:Key="ovsSiteUtilIconConverter"/>
    <ovs:LanguageIconConverter x:Key="ovsLanguageIconConverter"/>
    <ovs:BoolFocusPrioConverter x:Key="ovsBoolFocusPrioConverter"/>
    <ovs:SiteStateColorConverter x:Key="ovsSiteStateColorConverter"/>

    <ControlTemplate x:Key="ovsListViewTemplate" TargetType="{x:Type ListView}">
      <ScrollViewer CanContentScroll="True" Margin="0" Style="{ThemeResource GradientListScrollViewerStyle}"
                    HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
      </ScrollViewer>
    </ControlTemplate>

    <DataTemplate x:Key="ovsSiteGroupItemDataTemplate" DataType="{x:Type ovs:SiteGroupViewModel}">
      <Grid Width="{ResolutionResource ovsSiteGroupItemWidth}" Height="{ResolutionResource ovsSiteGroupItemHeight}"
            HorizontalAlignment="Center" VerticalAlignment="Center" Margin="1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border x:Name="BackgroundBorder" Grid.Column="0" Grid.Row="0" CornerRadius="0" Background="#454545" Margin="0">
          <Border.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
              <Setter TargetName="BackgroundBorder" Property="Background" Value="#003366"/>
            </DataTrigger>
          </Border.Triggers>
        </Border>
        <Image x:Name="thumb" Stretch="Uniform" Margin="{ResolutionResource ovsSiteGroupItemThumbMargin}" Source="{Binding Path=Thumb}"/>
        <Label x:Name="ItemLabelBig" HorizontalAlignment="Center" VerticalAlignment="Center" Wrap="true" Content="{Binding [Name]}" IsVisible="{Binding ElementName=thumb, Path=!HasImage}" Color="{ThemeResource TextColor}"/>
        <!--Label x:Name="ItemLabel" HorizontalAlignment="Center" VerticalAlignment="Bottom" Content="{Binding [Name]}" FontSize="{ThemeResource SmallerFontSize}" IsVisible="{Binding ElementName=thumb, Path=HasImage}"
               Color="{ThemeResource TextColor}" Background="#A0000000"/-->
        <!--Label VerticalAlignment="Bottom" HorizontalAlignment="Right" FontSize="{ThemeResource LittleFontSize}" Margin="0,0,2,2" Content="{Binding Path=Sites.Count}"
               Color="{ThemeResource TextColor}"/-->
      </Grid>
    </DataTemplate>
    
    <DataTemplate x:Key="ovsSiteItemDataTemplate" DataType="{x:Type ovs:SiteViewModel}">
      <Grid Width="{ResolutionResource ovsSiteItemWidth}" Height="{ResolutionResource ovsSiteItemHeight}" 
            HorizontalAlignment="Center" VerticalAlignment="Center" Margin="1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border x:Name="BackgroundBorder" Grid.Column="0" Grid.Row="0" CornerRadius="0" Background="#454545" Margin="0">
          <Border.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
              <Setter TargetName="BackgroundBorder" Property="Background" Value="#003366"/>
            </DataTrigger>
          </Border.Triggers>
        </Border>
        <Image x:Name="thumb" Stretch="Uniform" Margin="{ResolutionResource ovsSiteItemThumbMargin}" 
                   Source="{Binding Path=Site, Converter={StaticResource ovsSiteUtilIconConverter}}"/>
        <!--Image Width="{ResolutionResource ovsLanguageImageWidth}" Stretch="Uniform" Margin="0,2,3,0" 
               HorizontalAlignment="Right" VerticalAlignment="Top" 
               Source="{Binding Path=Language, Converter={StaticResource ovsLanguageIconConverter}}"/-->
        <Label x:Name="ItemLabelBig" HorizontalAlignment="Center" VerticalAlignment="Center" Wrap="true" Scroll="None"
               Content="{Binding Path=Name}" IsVisible="{Binding ElementName=thumb, Path=!HasImage}" Color="{ThemeResource TextColor}"/>
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ovsCategoryItemDataTemplate" DataType="{x:Type ovs:CategoryViewModel}">
      <Grid Width="{ResolutionResource ovsCategoryItemWidth}" Height="{ResolutionResource ovsCategoryItemHeight}" Margin="1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border x:Name="BackgroundBorder" CornerRadius="0" Background="#454545" Margin="0">
          <Border.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
              <Setter TargetName="BackgroundBorder" Property="Background" Value="#003366"/>
            </DataTrigger>
          </Border.Triggers>
        </Border>

        <Grid Name="PosterGrid" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"
              MaxHeight="{ResolutionResource ovsCategoryItemHeight}" MaxWidth="{ResolutionResource ovsCategoryItemWidth}">
         <DockPanel>
           <Image DockPanel.Dock="Center" x:Name="thumb" Stretch="Uniform" Source="{Binding Path=Thumb}"/>
           <Label DockPanel.Dock="Bottom" x:Name="ItemLabel" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"
                  VerticalAlignment="Bottom" Wrap="False" Scroll="None" ScrollDelay="0" Margin="20,90,20,20" HorizontalAlignment="Right"
                  FontSize="{ThemeResource SmallFontSize}" Content="{Binding Path=Name}" Color="{ThemeResource TextColor}" />
         </DockPanel>
         <Label VerticalAlignment="Top" HorizontalAlignment="Right" FontSize="{ThemeResource SmallFontSize}" Margin="20,18,20,20" 
                 Content="{Binding Path=EstimatedChildren}" Color="{ThemeResource TextColor}" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
        </Grid>
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ovsVideoItemDataTemplate" DataType="{x:Type ovs:VideoViewModel}">
      <Grid Width="{ResolutionResource ovsVideoItemWidth}" Height="{ResolutionResource ovsVideoItemHeight}" Margin="1">
         <Grid.ColumnDefinitions>
           <ColumnDefinition Width="*"/>
         </Grid.ColumnDefinitions>
         <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
         </Grid.RowDefinitions>

        <Border x:Name="BackgroundBorder" CornerRadius="0" Background="#454545" Margin="0">
          <Border.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
              <Setter TargetName="BackgroundBorder" Property="Background" Value="#003366"/>
            </DataTrigger>
          </Border.Triggers>
        </Border>
        
        <Grid Name="PosterGrid" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"
              MaxWidth="{ResolutionResource ovsVideoItemWidth}" MaxHeight="{ResolutionResource ovsVideoItemHeight}">
          <Image x:Name="thumb" Stretch="Uniform" VerticalAlignment="Center" Source="{Binding Path=ThumbnailImage}"/>
          <Label x:Name="ItemLabel"  IsVisible="{Binding ElementName=thumb, Path=!HasImage}"
                 VerticalAlignment="Bottom" Wrap="False" Scroll="None" ScrollDelay="0" Margin="20,90,20,20" HorizontalAlignment="Center"
                 FontSize="{ThemeResource SmallFontSize}" Content="{Binding Path=Title}" Color="{ThemeResource TextColor}" />
         </Grid>     
       </Grid>
    </DataTemplate>

    <Style x:Key="ovsSiteGroupItemContainerStyle" TargetType="{x:Type ListViewItem}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ListViewItem}">
            <Button x:Name="ovsGrowControl" Style="{ThemeResource MediaItemButtonCoverStyle}">
              <Button.Command>
                <Command Source="{DynamicResource OnlineVideosModel}" Path="SelectSiteGroup" Parameters="{LateBoundValue BindingValue={Binding}}"/>
              </Button.Command>
            </Button>
            <ControlTemplate.Triggers>
              <Trigger Property="Selected" Value="True">
                <Setter Property="WrapPanel.ZIndex" Value="100.0"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    
    <Style x:Key="ovsSiteItemContainerStyle" TargetType="{x:Type ListViewItem}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ListViewItem}">
            <Button x:Name="ovsGrowControl" Style="{ThemeResource MediaItemButtonCoverStyle}">
              <Button.Command>
                <Command Source="{DynamicResource OnlineVideosModel}" Path="SelectSite" Parameters="{LateBoundValue BindingValue={Binding}}"/>
              </Button.Command>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                </Trigger>
              </Button.Triggers>
              <Button.ContextMenuCommand>
                <Command Source="{Service ScreenManager}" Path="ShowDialog" Parameters="ovsDialogItemContextMenu"/>
              </Button.ContextMenuCommand>
            </Button>
            <ControlTemplate.Triggers>
              <Trigger Property="Selected" Value="True">
                <Setter Property="WrapPanel.ZIndex" Value="100.0"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="ovsCategoryItemContainerStyle" TargetType="{x:Type ListViewItem}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ListViewItem}">
            <Button x:Name="ovsGrowControl" Style="{ThemeResource MediaItemButtonCoverStyle}"
                    SetFocusPrio="{Binding Path=Selected, Mode=OneTime, Converter={StaticResource ovsBoolFocusPrioConverter}}">
              <Button.Command>
                <Command Source="{DynamicResource OnlineVideosModel}" Path="SelectCategory" Parameters="{LateBoundValue BindingValue={Binding}}"/>
              </Button.Command>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                </Trigger>
              </Button.Triggers>
            </Button>
            <ControlTemplate.Triggers>
              <Trigger Property="Selected" Value="True">
               <Setter Property="WrapPanel.ZIndex" Value="100.0"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="ovsVideoItemContainerStyle" TargetType="{x:Type ListViewItem}">
       <Setter Property="Template">
          <Setter.Value>
             <ControlTemplate TargetType="{x:Type ListViewItem}">
                <Button x:Name="ovsGrowControl" SetFocusPrio="{Binding Path=Selected, Mode=OneTime, Converter={StaticResource ovsBoolFocusPrioConverter}}"
                        Style="{ThemeResource MediaItemButtonCoverStyle}">
                  <Button.Command>
                    <Command Source="{DynamicResource OnlineVideosModel}" Path="SelectVideo" Parameters="{LateBoundValue BindingValue={Binding}}"/>
                  </Button.Command>
                  <Button.ContextMenuCommand>
                    <Command Source="{Service ScreenManager}" Path="ShowDialog" Parameters="ovsDialogItemContextMenu"/>
                  </Button.ContextMenuCommand>
                  <Button.Triggers>
                    <Trigger Property="HasFocus" Value="True">
                      <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                    </Trigger>
                  </Button.Triggers>
                </Button>
              <ControlTemplate.Triggers>
                <Trigger Property="Selected" Value="True">
                  <Setter Property="WrapPanel.ZIndex" Value="100.0"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
       </Setter>
    </Style>

    <Style x:Key="ovsDetailsVideoItemContainerStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Button Style="{ThemeResource ButtonWideStyle}"
                      Command="{DynamicResource ResourceKey=Menu_Command}"
                      IsEnabled="{Binding Enabled}" SetFocus="{Binding Path=Selected,Mode=OneTime}">
                        <Button.ContextMenuCommand>
                            <Command Source="{Service ScreenManager}" Path="ShowDialog" Parameters="ovsDialogItemContextMenu"/>
                        </Button.ContextMenuCommand>
                        <Button.Triggers>
                            <Trigger Property="HasFocus" Value="True">
                                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                                <Setter Property="StackPanel.ZIndex" Value="100.0"/>
                            </Trigger>
                        </Button.Triggers>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ovsSiteGroupsListViewStyle" TargetType="{x:Type ListView}">
      <Setter Property="Template" Value="{ThemeResource ovsListViewTemplate}"/>
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <AnimatedWrapPanel x:Name="GridItemsHost" IsItemsHost="True" Orientation="Horizontal" LoopScroll="False"
                               ScrollMargin="0,200" Margin="0,-100,0,-150">
              <AnimatedWrapPanel.Resources>
                <Storyboard x:Key="ScrollAnimation" FillBehavior="HoldEnd">
                  <DoubleAnimation BeginTime="00:00:00" From="0" To="1" Duration="00:00:00.300" 
                                   FillBehavior="HoldEnd" Storyboard.TargetName="GridItemsHost" Storyboard.TargetProperty="ScrollOffsetMultiplier"/>
                </Storyboard>
              </AnimatedWrapPanel.Resources>
              <AnimatedWrapPanel.Triggers>
                <EventTrigger RoutedEvent="AnimatedWrapPanel.Scroll">
                  <EventTrigger.Actions>
                    <BeginStoryboard Storyboard="{ThemeResource ScrollAnimation}"/>
                  </EventTrigger.Actions>
                </EventTrigger>
              </AnimatedWrapPanel.Triggers>
            </AnimatedWrapPanel>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="ItemTemplate" Value="{ThemeResource ovsSiteGroupItemDataTemplate}"/>
      <Setter Property="ItemContainerStyle" Value="{ThemeResource ovsSiteGroupItemContainerStyle}"/>
      <Setter Property="DataStringProvider" Value="{ThemeResource DefaultItemDataStringProvider}"/>
    </Style>
    
    <Style x:Key="ovsSitesListViewStyle" TargetType="{x:Type ListView}">
        <Setter Property="Template" Value="{ThemeResource ovsListViewTemplate}"/>
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <AnimatedWrapPanel x:Name="GridItemsHost" IsItemsHost="True" Orientation="Horizontal" LoopScroll="False"
                                 ScrollMargin="0,200" Margin="0,-100,0,-150">
                <AnimatedWrapPanel.Resources>
                  <Storyboard x:Key="ScrollAnimation" FillBehavior="HoldEnd">
                    <DoubleAnimation BeginTime="00:00:00" From="0" To="1" Duration="00:00:00.300" 
                                           FillBehavior="HoldEnd" Storyboard.TargetName="GridItemsHost" Storyboard.TargetProperty="ScrollOffsetMultiplier"/>
                  </Storyboard>
                </AnimatedWrapPanel.Resources>
                <AnimatedWrapPanel.Triggers>
                  <EventTrigger RoutedEvent="AnimatedWrapPanel.Scroll">
                    <EventTrigger.Actions>
                      <BeginStoryboard Storyboard="{ThemeResource ScrollAnimation}"/>
                    </EventTrigger.Actions>
                  </EventTrigger>
                </AnimatedWrapPanel.Triggers>
              </AnimatedWrapPanel>
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate" Value="{ThemeResource ovsSiteItemDataTemplate}"/>
        <Setter Property="ItemContainerStyle" Value="{ThemeResource ovsSiteItemContainerStyle}"/>
        <Setter Property="DataStringProvider" Value="{ThemeResource DefaultItemDataStringProvider}"/>
    </Style>

    <Style x:Key="ovsCategoriesListViewStyle" TargetType="{x:Type ListView}">
      <Setter Property="Template" Value="{ThemeResource ovsListViewTemplate}"/>
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <AnimatedWrapPanel x:Name="GridItemsHost" IsItemsHost="True" Orientation="Horizontal" LoopScroll="False"
                               ScrollMargin="0,200" Margin="0,-100,0,-150">
              <AnimatedWrapPanel.Resources>
                <Storyboard x:Key="ScrollAnimation" FillBehavior="HoldEnd">
                  <DoubleAnimation BeginTime="00:00:00" From="0" To="1" Duration="00:00:00.300" 
                                           FillBehavior="HoldEnd" Storyboard.TargetName="GridItemsHost" Storyboard.TargetProperty="ScrollOffsetMultiplier"/>
                </Storyboard>
              </AnimatedWrapPanel.Resources>
              <AnimatedWrapPanel.Triggers>
                <EventTrigger RoutedEvent="AnimatedWrapPanel.Scroll">
                  <EventTrigger.Actions>
                    <BeginStoryboard Storyboard="{ThemeResource ScrollAnimation}"/>
                  </EventTrigger.Actions>
                </EventTrigger>
              </AnimatedWrapPanel.Triggers>
            </AnimatedWrapPanel>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="ItemTemplate" Value="{ThemeResource ovsCategoryItemDataTemplate}"/>
      <Setter Property="ItemContainerStyle" Value="{ThemeResource ovsCategoryItemContainerStyle}"/>
      <Setter Property="DataStringProvider" Value="{ThemeResource DefaultItemDataStringProvider}"/>
    </Style>

    <Style x:Key="ovsVideosListViewStyle" TargetType="{x:Type ListView}">
      <Setter Property="Template" Value="{ThemeResource ovsListViewTemplate}"/>
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <AnimatedWrapPanel x:Name="GridItemsHost" IsItemsHost="True" Orientation="Horizontal" LoopScroll="False"
                               ScrollMargin="0,200" Margin="0,-100,0,-150">
              <AnimatedWrapPanel.Resources>
                <Storyboard x:Key="ScrollAnimation" FillBehavior="HoldEnd">
                  <DoubleAnimation BeginTime="00:00:00" From="0" To="1" Duration="00:00:00.300" 
                                           FillBehavior="HoldEnd" Storyboard.TargetName="GridItemsHost" Storyboard.TargetProperty="ScrollOffsetMultiplier"/>
                </Storyboard>
              </AnimatedWrapPanel.Resources>
              <AnimatedWrapPanel.Triggers>
                <EventTrigger RoutedEvent="AnimatedWrapPanel.Scroll">
                  <EventTrigger.Actions>
                    <BeginStoryboard Storyboard="{ThemeResource ScrollAnimation}"/>
                  </EventTrigger.Actions>
                </EventTrigger>
              </AnimatedWrapPanel.Triggers>
            </AnimatedWrapPanel>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="ItemTemplate" Value="{ThemeResource ovsVideoItemDataTemplate}"/>
      <Setter Property="ItemContainerStyle" Value="{ThemeResource ovsVideoItemContainerStyle}"/>
      <Setter Property="DataStringProvider" Value="{ThemeResource DefaultItemDataStringProvider}"/>
    </Style>

    <Style x:Key="ovsDetailsVideosListViewStyle" BasedOn="{ThemeResource MenuListViewStyle}">
        <Setter Property="ItemContainerStyle" Value="{ThemeResource ovsDetailsVideoItemContainerStyle}"/>
    </Style>

    <DataTemplate x:Key="ovsSiteSettingsItemDataTemplate" DataType="{x:Type ovs:SiteSettingViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Content="{Binding [Name]}"
                   HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}"
                   Color="{ThemeResource TextColor}"/>
            <Label Grid.Column="1" Content="{Binding Value}"
                   HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}"
                   Color="{ThemeResource TextColor}"/>
        </Grid>
    </DataTemplate>

    <Style x:Key="ovsSiteSettingsListViewStyle" BasedOn="{ThemeResource ContentsMenuListViewStyle}">
        <Setter Property="ItemTemplate" Value="{ThemeResource ovsSiteSettingsItemDataTemplate}"/>
    </Style>

    <DataTemplate x:Key="ovsOnlineSiteItemDataTemplate" DataType="{x:Type ovs:OnlineSiteViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Ellipse Width="{ResolutionResource ovsSiteStateRadius}" Height="{ResolutionResource ovsSiteStateRadius}" Margin="2">
                <Ellipse.Fill>
                    <SolidColorBrush Color="{Binding Path=Site.State, Converter={StaticResource ovsSiteStateColorConverter}}"/>
                </Ellipse.Fill>
            </Ellipse>
            <Image Grid.Column="1" Width="{ResolutionResource ovsLanguageImageWidth}" Stretch="Uniform" Source="{Binding Path=Site.Language, Converter={StaticResource ovsLanguageIconConverter}}"
                    Margin="2"/>
            <Label Grid.Column="2" Content="{Binding [Name]}"
                   HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}"
                   Color="{ThemeResource TextColor}"/>
            <Label Grid.Column="3" Color="{ThemeResource HintTextColor}"
                HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Margin="2">
                <Label.Content>
                    <Binding Path="LastUpdated" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}{0:g}"/>
                </Label.Content>
            </Label>
            <Label Grid.Column="4" Content="{Binding Owner}"
                   HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}"
                   Color="{ThemeResource TextColor}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ovsUserReportItemDataTemplate" DataType="{x:Type ovs:ReportViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{ResolutionResource ovsReportLabelWidth}"/>
                <ColumnDefinition Width="{ResolutionResource ovsReportLabelWidth}"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Content="{Binding Path=Report.Type}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{ThemeResource LittleFontSize}" Color="{ThemeResource TextColor}"/>
            <Label Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{ThemeResource LittleFontSize}" Color="{ThemeResource TextColor}">
                <Label.Content>
                    <Binding Path="Report.Date" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}{0:g}"/>
                </Label.Content>
            </Label>
            <Label Grid.Column="2" Content="{Binding Path=Report.Message}" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="{ThemeResource SmallerFontSize}" Color="{ThemeResource TextColor}" Wrap="true"/>
        </Grid>
    </DataTemplate>

    <Style x:Key="ovsOnlineSiteListViewStyle" BasedOn="{ThemeResource ContentsMenuListViewStyle}">
        <Setter Property="ItemTemplate" Value="{ThemeResource ovsOnlineSiteItemDataTemplate}"/>
    </Style>

    <Style x:Key="ovsUserReportListViewStyle" BasedOn="{ThemeResource ContentsMenuListViewStyle}">
        <Setter Property="ItemTemplate" Value="{ThemeResource ovsUserReportItemDataTemplate}"/>
    </Style>

    <Style x:Key="ovsPasswordTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{ThemeResource TextBoxBackgroundColor}" BorderBrush="{ThemeResource TextBoxBorderColor}"
                        BorderThickness="{ThemeResource TextBoxBorderThickness}" CornerRadius="{ThemeResource TextBoxCornerRadius}">
                        <TextControl x:Name="TextControl" PreferredTextLength="{TemplateBinding Path=PreferredTextLength}"
                            CaretIndex="{TemplateBinding Path=CaretIndex,Mode=TwoWay}" IsPassword="{Binding IsPassword}" Text="{TemplateBinding Path=Text,Mode=TwoWay}"
                            Color="{TemplateBinding Color}" TextAlign="{TemplateBinding TextAlign}"
                            IsEnabled="{TemplateBinding IsEnabled}"/>
                        <Border.Triggers>
                            <DataTrigger Binding="{Binding ElementName=TextControl,Path=HasFocus}" Value="True">
                                <Setter Property="BorderBrush" Value="{ThemeResource TextBoxBorderFocusColor}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=TextControl,Path=IsEnabled}" Value="False">
                                <Setter Property="Background" Value="{ThemeResource TextBoxDisabledBackgroundColor}"/>
                            </DataTrigger>
                        </Border.Triggers>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
